#!/usr/bin/env -S fontforge -quiet
# -*- mode: python; coding: utf-8 -*-
import argparse
import unicodedata
import os
import fontforge

sys.path.append(os.environ["HOME"] + "/.venv/lib/python3.12/site-packages")
import unicodeblocks

blocks = list(unicodeblocks.blocks.values())
blocks.sort(key=lambda a: a.start)

def main():
    global args
    parser = argparse.ArgumentParser()
    parser.add_argument("filenames", nargs="+")
    args = parser.parse_args()
    for filename in args.filenames:
        print("%s:" % filename)
        font = fontforge.open(filename)
        codepoints = [glyph.unicode for glyph in font.glyphs() if glyph.unicode >= 0]
        for block in blocks:
            codepoint_count = 0
            codepoint_included_count = 0
            for codepoint in range(block.start, block.end + 1):
                codepoint_count += 1
                if codepoint in codepoints:
                    codepoint_included_count += 1
            percentage = codepoint_included_count / codepoint_count * 100
            if codepoint_included_count > 0:
                print("    %6d  %6d  %6.2f%%  %-8s  %-8s  %s" %
                      (codepoint_included_count, codepoint_count, percentage,
                       u(block.start), u(block.end), block.name))
def u(codepoint):
    if codepoint < 0:
        return "%d" % codepoint
    return "U+%04X" % codepoint

main()
