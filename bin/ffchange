#!/usr/bin/env python3
import fontforge
import getopt
import sys

# NOTES:
# - SETWIDTH_NAME is an XLFD thing.
# - ADD_STYLE_NAME is an XLFD thing.

HELP_MESSAGE = '''
usage:
    ffchange [-f, --font-name=<name>] <filename> ...
             [-m, --family-name=<name>]
             [-w, --weight-name=<name>]
             [-F, --full-name=<name>]
             [--ascent=<int>]
             [--copyright=<name>]
             [--descent=<int>]
             [--italic-angle=<deg>]
             [--panose=0=9,1=5,...]
    ffchange [<options> ...] <filename> -o|--outupt=<filename>
    ffchange --help
    ffchange --panose-help
    ffchange --panose-0-help ... --panose-8-help
'''.strip()

PANOSE_HELP_MESSAGE = '''
--panose=<index>=<value>,...
    For Latin text:
        0 = serif style
        1 = weight
        2 = proportion
        3 = contrast
        4 = stroke variation
        5 = arm style
        6 = letterform
        7 = midline
        8 = x-height
for details, See: see https://monotype.github.io/panose/pan1.htm
'''.strip()

PANOSE_0_HELP_MESSAGE = '''
0 Serif Style
    0 - Any
    1 - No Fit
    2 - Cove
    3 - Obtuse Cove
    4 - Square Cove
    5 - Obtuse Square Cove
    6 - Square
    7 - Thin
    8 - Oval
    9 - Exaggerated
    10 - Triangle
    11 - Normal Sans
    12 - Obtuse Sans
    13 - Perpendicular Sans
    14 - Flared
    15 - Rounded
'''.strip()

PANOSE_1_HELP_MESSAGE = '''
1 Weight
    0 - Any
    1 - No Fit
    2 - Very Light
    3 - Light
    4 - Thin
    5 - Book
    6 - Medium
    7 - Demi
    8 - Bold
    9 - Heavy
    10 - Black
    11 - Extra Black
'''.strip()

PANOSE_2_HELP_MESSAGE = '''
2 Proportion
    0 - Any
    1 - No fit
    2 - Old Style
    3 - Modern
    4 - Even Width
    5 - Extended
    6 - Condensed
    7 - Very Extended
    8 - Very Condensed
    9 - Monospaced
'''.strip()

PANOSE_3_HELP_MESSAGE = '''
3 Contrast
    0 - Any
    1 - No Fit
    2 - None
    3 - Very Low
    4 - Low
    5 - Medium Low
    6 - Medium
    7 - Medium High
    8 - High
    9 - Very High
'''.strip()

PANOSE_4_HELP_MESSAGE = '''
4 Stroke Variation
    0 - Any
    1 - No Fit
    2 - No Variation
    3 - Gradual/Diagonal
    4 - Gradual/Transitional
    5 - Gradual/Vertical
    6 - Gradual/Horizontal
    7 - Rapid/Vertical
    8 - Rapid/Horizontal
    9 - Instant/Vertical
    10 - Instant/Horizontal
'''.strip()

PANOSE_5_HELP_MESSAGE = '''
5 Arm Style
    0 - Any
    1 - No Fit
    2 - Straight Arms/Horizontal
    3 - Straight Arms/Wedge
    4 - Straight Arms/Vertical
    5 - Straight Arms/Single Serif
    6 - Straight Arms/Double Serif
    7 - Non-Straight/Horizontal
    8 - Non-Straight/Wedge
    9 - Non-Straight/Vertical
    10 - Non-Straight/Single Serif
    11 - Non-Straight/Double Serif
'''.strip()

PANOSE_6_HELP_MESSAGE = '''
6 Letterform
    0 - Any
    1 - No Fit
    2 - Normal/Contact
    3 - Normal/Weighted
    4 - Normal/Boxed
    5 - Normal/Flattened
    6 - Normal/Rounded
    7 - Normal/Off Center
    8 - Normal/Square
    9 - Oblique/Contact
    10 - Oblique/Weighted
    11 - Oblique/Boxed
    12 - Oblique/Flattened
    13 - Oblique/Rounded
    14 - Oblique/Off Center
    15 - Oblique/Square
'''.strip()

PANOSE_7_HELP_MESSAGE = '''
7 Midline
    0 - Any
    1 - No Fit
    2 - Standard/Trimmed
    3 - Standard/Pointed
    4 - Standard/Serifed
    5 - High/Trimmed
    6 - High/Pointed
    7 - High/Serifed
    8 - Constant/Trimmed
    9 - Constant/Pointed
    10 - Constant/Serifed
    11 - Low/Trimmed
    12 - Low/Pointed
    13 - Low/Serifed
'''.strip()

PANOSE_8_HELP_MESSAGE = '''
8 X - Height
    0 - Any
    1 - No Fit
    2 - Constant/Small
    3 - Constant/Standard
    4 - Constant/Large
    5 - Ducking/Small
    6 - Ducking/Standard
    7 - Ducking/Large
'''.strip()

opts, args = getopt.gnu_getopt(sys.argv[1:],
                               "hf:m:w:F:o:",
                               [
                                   "help",
                                   "panose-help",
                                   "panose-0-help",
                                   "panose-1-help",
                                   "panose-2-help",
                                   "panose-3-help",
                                   "panose-4-help",
                                   "panose-5-help",
                                   "panose-6-help",
                                   "panose-7-help",
                                   "panose-8-help",
                                   "font-name=",
                                   "family-name=",
                                   "weight-name=",
                                   "full-name=",
                                   "ascent=",
                                   "copyright=",
                                   "descent=",
                                   "italic-angle=",
                                   "panose=",
                                   "output=",
                                   "output-filename=",
                               ])

theyWantHelp = False
help = False
panoseHelp = False
panose0Help = False
panose1Help = False
panose2Help = False
panose3Help = False
panose4Help = False
panose5Help = False
panose6Help = False
panose7Help = False
panose8Help = False

fontName = None
familyName = None
weightName = None
fullName = None
ascent = None
copyright = None
descent = None
italicAngle = None
panoseString = None
outputFilename = None

for opt, arg in opts:
    if opt in ('-h', '--help'):
        theyWantHelp = True
        help = True
    elif opt == '--panose-help':
        theyWantHelp = True
        panoseHelp = True
    elif opt == '--panose-0-help':
        theyWantHelp = True
        panose0Help = True
    elif opt == '--panose-1-help':
        theyWantHelp = True
        panose1Help = True
    elif opt == '--panose-2-help':
        theyWantHelp = True
        panose2Help = True
    elif opt == '--panose-3-help':
        theyWantHelp = True
        panose3Help = True
    elif opt == '--panose-4-help':
        theyWantHelp = True
        panose4Help = True
    elif opt == '--panose-5-help':
        theyWantHelp = True
        panose5Help = True
    elif opt == '--panose-6-help':
        theyWantHelp = True
        panose6Help = True
    elif opt == '--panose-7-help':
        theyWantHelp = True
        panose7Help = True
    elif opt == '--panose-8-help':
        theyWantHelp = True
        panose8Help = True
    elif opt in ('-f', '--font-name'):
        fontName = arg
    elif opt in ('-F', '--family-name'):
        familyName = arg
    elif opt in ('-w', '--weight-name'):
        weightName = arg
    elif opt in ('-F', '--full-name'):
        fullName = arg
    elif opt == '--ascent':
        ascent = int(arg)
    elif opt == '--copyright':
        copyright = arg
    elif opt == '--descent':
        descent = int(arg)
    elif opt == '--italic-angle':
        italicAngle = int(arg)
    elif opt == '--panose':
        panoseString = arg
    elif opt in ('-o', '--output', '--output-filename'):
        outputFilename = arg

if theyWantHelp:
    if help:
        print(HELP_MESSAGE)
    if panoseHelp:
        print(PANOSE_HELP_MESSAGE)
    if panose0Help:
        print(PANOSE_0_HELP_MESSAGE)
    if panose1Help:
        print(PANOSE_1_HELP_MESSAGE)
    if panose2Help:
        print(PANOSE_2_HELP_MESSAGE)
    if panose3Help:
        print(PANOSE_3_HELP_MESSAGE)
    if panose4Help:
        print(PANOSE_4_HELP_MESSAGE)
    if panose5Help:
        print(PANOSE_5_HELP_MESSAGE)
    if panose6Help:
        print(PANOSE_6_HELP_MESSAGE)
    if panose7Help:
        print(PANOSE_7_HELP_MESSAGE)
    if panose8Help:
        print(PANOSE_8_HELP_MESSAGE)
    sys.exit()

if len(args) < 1:
    raise Exception("not enough arguments - must specify at least one filename")

if outputFilename is not None and len(args) != 1:
    raise Exception("too many arguments - must only supply one input filename if --output-filename is specified")

for filename in args:
    font = fontforge.open(filename)

    if fontName is not None:
        font.fontname = fontName
    if familyName is not None:
        font.familyname = familyName
    if weightName is not None:
        font.weight = weightName
    if fullName is not None:
        font.fullName = fullName
    if ascent is not None:
        font.ascent = ascent
    if copyright is not None:
        font.copyright = copyright
    if descent is not None:
        font.descent = descent
    if italicAngle is not None:
        font.italicangle = italicAngle
    if panoseString is not None:
        panoseChagnes = re.split(r'\s*(,\s*)+', panoseString)
        for change in panoseChanges:
            a = re.split(r'\s*=\s*', change.strip(), 2)
            if (a.length < 2):
                raise Exception("invalid panose change: %s" % change)
            index = int(a[0])
            value = int(a[1])
            if index < 0 or index > 8:
                raise Exception("invalid panose index %d: %s" % (index, change))
            before = "%s" % font.os2_panose
            panose = list(font.os2_panose)
            panose[index] = value
            font.os2_panose = tuple(panose)
            after = "%s" % font.os2_panose
            print("panose: %s => %s" % (before, after))

    if outputFilename is not None:
        outputFilename = filename
    if os.path.splitext(filename)[1] == '.sfd':
        font.save(filename)
    else:
        font.generate(filename)
